library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity project is
Port ( 
max_occupancy : in unsigned(5 downto 0);

add_x : in std_logic;
miu_y : in std_logic;

clk : in std_logic;
reset : in std_logic;

z : out std_logic
);

end project;

architecture projectarch of project is
signal load_input_occupancy, counter : integer range 0 to 63 := 0;
signal sig_x, sig_y, sig_z,novalueincounter : std_logic := '0';



begin
process(clk, reset)	
begin
load_input_occupancy <= to_integer(max_occupancy);
if reset = '1' then
counter <= 0;
load_input_occupancy <= 0;
sig_x <= '0';
sig_y <= '0';
sig_z <= '0';


elsif (clk'event and clk = '1') then
if add_x = '1' then                          
sig_x <= '1';
counter <= counter + 1;

else
sig_x <= '0';

end if;



if miu_y = '1' then 
sig_y <= '1';
if counter = 0 then
novalueincounter <= '1';
else 
novalueincounter <='0';
counter <= counter - 1;
end if;
else
sig_y <= '0';
end if;




if counter >= (load_input_occupancy-1)   then
sig_z <= '1';
else
sig_z <= '0';
end if;


end if;
end process;



z <= sig_z; 
end projectarch;
